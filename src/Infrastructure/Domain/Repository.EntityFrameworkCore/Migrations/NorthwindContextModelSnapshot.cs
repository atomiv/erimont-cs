// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Optivem.Northwind.Infrastructure.Domain.Repository.EntityFrameworkCore;

namespace Optivem.Northwind.Infrastructure.Domain.Repository.EFCore.Migrations
{
    [DbContext(typeof(NorthwindContext))]
    partial class NorthwindContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("BusinessPhone")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CountryRegion")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(25);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("HomePhone")
                        .HasMaxLength(25);

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("Notes");

                    b.Property<string>("StateProvince")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("WebPage");

                    b.Property<string>("ZipPostalCode")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("BusinessPhone")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CountryRegion")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(25);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("HomePhone")
                        .HasMaxLength(25);

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("Notes");

                    b.Property<string>("StateProvince")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("WebPage");

                    b.Property<string>("ZipPostalCode")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.EmployeePrivilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId");

                    b.Property<int>("PrivilegeId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PrivilegeId");

                    b.ToTable("EmployeePrivilege");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.InventoryTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasMaxLength(255);

                    b.Property<int>("CustomerOrderId");

                    b.Property<int>("ProductId");

                    b.Property<int>("PurchaseOrderId");

                    b.Property<int>("Quantity");

                    b.Property<DateTime>("TransactionCreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TransactionModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte>("TransactionTypeId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerOrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("InventoryTransaction");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.InventoryTransactionType", b =>
                {
                    b.Property<byte>("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("InventoryTransactionType");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountDue")
                        .HasColumnType("money");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<int>("OrderId");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("money");

                    b.Property<decimal>("Tax")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId");

                    b.Property<int>("EmployeeId");

                    b.Property<string>("Notes");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("PaidDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ShipAddress")
                        .IsRequired();

                    b.Property<string>("ShipCity")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ShipCountryRegion")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ShipStateProvince")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ShipZipPostalCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("ShippedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ShipperId");

                    b.Property<decimal>("ShippingFee")
                        .HasColumnType("money");

                    b.Property<byte>("StatusId");

                    b.Property<double>("TaxRate");

                    b.Property<byte>("TaxStatusId");

                    b.Property<decimal>("Taxes")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TaxStatusId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAllocated")
                        .HasColumnType("datetime");

                    b.Property<double>("Discount");

                    b.Property<int>("InventoryId");

                    b.Property<int>("OrderId");

                    b.Property<int>("ProductId");

                    b.Property<int>("PurchaseOrderId");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<byte>("StatusId");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StatusId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.OrderDetailStatus", b =>
                {
                    b.Property<byte>("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("OrderDetailStatus");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.OrderStatus", b =>
                {
                    b.Property<byte>("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("OrderStatus");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.OrderTaxStatus", b =>
                {
                    b.Property<byte>("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("OrderTaxStatus");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.Privilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PrivilegeName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Privilege");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("Discontinued");

                    b.Property<decimal>("ListPrice")
                        .HasColumnType("money");

                    b.Property<short>("MinimumReorderQuantity");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("QuantityPerUnit")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<short>("ReorderLevel");

                    b.Property<decimal>("StandardCost")
                        .HasColumnType("money");

                    b.Property<string>("SupplierId")
                        .IsRequired();

                    b.Property<int>("TargetLevel");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovedBy");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpectedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("ShippingFee")
                        .HasColumnType("money");

                    b.Property<byte>("StatusId");

                    b.Property<int>("SubmittedBy");

                    b.Property<DateTime>("SubmittedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("SupplierId");

                    b.Property<decimal>("Taxes")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("StatusId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseOrder");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.PurchaseOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("datetime");

                    b.Property<int>("InventoryId");

                    b.Property<bool>("PostedToInventory");

                    b.Property<int>("ProductId");

                    b.Property<int>("PurchaseOrderId");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderDetail");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.PurchaseOrderStatus", b =>
                {
                    b.Property<byte>("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("PurchaseOrderStatus");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.Shipper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("BusinessPhone")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CountryRegion")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(25);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("HomePhone")
                        .HasMaxLength(25);

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("Notes");

                    b.Property<string>("StateProvince")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("WebPage");

                    b.Property<string>("ZipPostalCode")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("Shipper");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("BusinessPhone")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CountryRegion")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(25);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("HomePhone")
                        .HasMaxLength(25);

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("Notes");

                    b.Property<string>("StateProvince")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("WebPage");

                    b.Property<string>("ZipPostalCode")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.EmployeePrivilege", b =>
                {
                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.Employee", "Employee")
                        .WithMany("EmployeePrivilege")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_EmployeePrivilege_Employee");

                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.Privilege", "Privilege")
                        .WithMany("EmployeePrivilege")
                        .HasForeignKey("PrivilegeId")
                        .HasConstraintName("FK_EmployeePrivilege_Privilege");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.InventoryTransaction", b =>
                {
                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.Order", "CustomerOrder")
                        .WithMany("InventoryTransaction")
                        .HasForeignKey("CustomerOrderId")
                        .HasConstraintName("FK_InventoryTransaction_Order");

                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.Product", "Product")
                        .WithMany("InventoryTransaction")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_InventoryTransaction_Product");

                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.PurchaseOrder", "PurchaseOrder")
                        .WithMany("InventoryTransaction")
                        .HasForeignKey("PurchaseOrderId")
                        .HasConstraintName("FK_InventoryTransaction_PurchaseOrder");

                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.InventoryTransactionType", "TransactionType")
                        .WithMany("InventoryTransaction")
                        .HasForeignKey("TransactionTypeId")
                        .HasConstraintName("FK_InventoryTransaction_InventoryTransactionType");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.Invoice", b =>
                {
                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.Order", "Order")
                        .WithMany("Invoice")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_Invoice_Order");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.Order", b =>
                {
                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.Customer", "Customer")
                        .WithMany("Order")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Order_Customer");

                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.Employee", "Employee")
                        .WithMany("Order")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Order_Employee");

                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.Shipper", "Shipper")
                        .WithMany("Order")
                        .HasForeignKey("ShipperId")
                        .HasConstraintName("FK_Order_Shipper");

                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.OrderStatus", "Status")
                        .WithMany("Order")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Order_OrderStatus");

                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.OrderTaxStatus", "TaxStatus")
                        .WithMany("Order")
                        .HasForeignKey("TaxStatusId")
                        .HasConstraintName("FK_Order_OrderTaxStatus");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.OrderDetail", b =>
                {
                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.Order", "Order")
                        .WithMany("OrderDetail")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_OrderDetail_Order");

                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.Product", "Product")
                        .WithMany("OrderDetail")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_OrderDetail_Product");

                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.OrderDetailStatus", "Status")
                        .WithMany("OrderDetail")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_OrderDetail_OrderDetailStatus");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.PurchaseOrder", b =>
                {
                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.Employee", "CreatedByNavigation")
                        .WithMany("PurchaseOrder")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_PurchaseOrder_Employee");

                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.PurchaseOrderStatus", "Status")
                        .WithMany("PurchaseOrder")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_PurchaseOrder_PurchaseOrderStatus");

                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.Supplier", "Supplier")
                        .WithMany("PurchaseOrder")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_PurchaseOrder_Supplier");
                });

            modelBuilder.Entity("Optivem.Northwind.Core.Domain.Entity.PurchaseOrderDetail", b =>
                {
                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.InventoryTransaction", "Inventory")
                        .WithMany("PurchaseOrderDetail")
                        .HasForeignKey("InventoryId")
                        .HasConstraintName("FK_PurchaseOrderDetail_InventoryTransaction");

                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.Product", "Product")
                        .WithMany("PurchaseOrderDetail")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_PurchaseOrderDetail_Product");

                    b.HasOne("Optivem.Northwind.Core.Domain.Entity.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderDetail")
                        .HasForeignKey("PurchaseOrderId")
                        .HasConstraintName("FK_PurchaseOrderDetail_PurchaseOrder");
                });
#pragma warning restore 612, 618
        }
    }
}
